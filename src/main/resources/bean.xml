<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--配置一个bean-->
    <bean id="helloWorld" class="com.el.spring.xml.helloworld.HelloWorld">
        <!--为属性赋值-->
        <!-- 通过属性注入: 通过 setter 方法注入属性值 -->
        <property name="user" value="Jerry"/>
    </bean>
    <!--通过构造器注入属性值-->
    <bean id="helloWorld2" class="com.el.spring.xml.helloworld.HelloWorld" scope="prototype">
        <!-- 要求: 在 Bean 中必须有对应的构造器.  -->
       <constructor-arg value="Mike"/>
    </bean>

    <!--若一个bean有多个构造器，如何通过构造器为bean的属性赋值
      可以根据index和value进行更加精确的定位-->
    <bean id="car" class="com.el.spring.xml.helloworld.Car" scope="prototype">
        <constructor-arg value="KuGA" index="1"/>
        <constructor-arg value="changfu" index="0"/>
        <constructor-arg value="250000" type="int"/>
    </bean>

    <bean id="car2" class="com.el.spring.xml.helloworld.Car" >
        <constructor-arg value="ChangAnMazda"></constructor-arg>
        <constructor-arg>
            <value><![CDATA[<ATARZA>]]></value>
        </constructor-arg>
        <constructor-arg value="180" type="int"/>
    </bean>
   <bean id="dao5" class="com.el.spring.ref.Dao"/>
    <bean id="service" class="com.el.spring.ref.Service">
        <!-- 通过 ref 属性值指定当前属性指向哪一个 bean! -->
        <property name="dao" ref="dao5"/>
    </bean>

    <!--声明使用内部bean-->
    <bean id="service1" class="com.el.spring.ref.Service">
        <property name="dao">
            <bean class="com.el.spring.ref.Dao">
                <property name="dataSource" value="c3p0"/>
            </bean>
        </property>
    </bean>

    <bean id="action" class="com.el.spring.ref.Action">
        <property name="service" ref="service1"/>
        <!--设置级联属性（了解）-->
        <property name="service.dao.dataSource" value="DBCP2"></property>
    </bean>

    <bean id="dao2" class="com.el.spring.ref.Dao">
        <!--为Dao的属性值dataSource为null，若一个属性值不为null,可以赋值为null-->
        <property name="dataSource"><null></null></property>
    </bean>

    <bean id="user" class="com.el.spring.xml.helloworld.User">
        <property name="userName" value="jack"/>
        <property name="wifeName" value="xiaomao"/>
       <property name="cars">
           <!--使用list元素来装配集合属性-->
           <list>
               <ref bean="car"/>
               <ref bean="car2"/>
           </list>
       </property>
    </bean>

    <!--声明集合类型的bean-->
    <util:list id="cars">
        <ref bean="car"/>
        <ref bean="car2"/>
    </util:list>

    <bean id="user2" class="com.el.spring.xml.helloworld.User">
        <property name="userName" value="xiaoxiao"/>
        <property name="wifeName" value="小猫"/>
        <!--引用外部list集合-->
        <property name="cars" ref="cars"/>
    </bean>

    <bean id="user3" class="com.el.spring.xml.helloworld.User"
    p:cars-ref="cars" p:userName="小胡子"></bean>

    <!-- bean 的配置能够继承吗 ? 使用 parent 来完成继承 -->
    <bean id="user4" class="com.el.spring.xml.helloworld.User"
    parent="user" p:userName="Bob"></bean>

    <bean id="user6" class="com.el.spring.xml.helloworld.User"
          parent="user" p:userName="维多利亚"></bean>

    <!--测试depend-on-->
    <bean id="user5" class="com.el.spring.xml.helloworld.User"
   parent="user" p:userName="user5测试" depends-on="user6"></bean>
</beans>